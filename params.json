{"name":"Clangbuilder","tagline":"ClangOnWin Build Environment","body":"# Clang Builder   \r\nClang Build Environment On Windows, Long Term Evolution   \r\n\r\n## Installation:\r\n#### Usually:\r\nDownload from Github, If your known use Git  \r\n\r\n```\r\ngit clone https://github.com/fstudio/clangbuilder.git clangbuilder\r\n```\r\n\r\nClick the *Install.bat* in the clangbuilder directory, this will run PowerShell startup  *bin/Installer/Install.ps1*      \r\nIt is recommended that whenever you have PowerShell scripts, and try not to delete the project file in the tools directory.\r\n\r\nSimilarly, you can start a PowerShell runs Install.ps1, generally run PowerShell scripts on the Windows right-click menu option, you can right-click the menu \"*run with PowerShell*\"\r\nAbove procedure does not require administrator privileges.\r\n\r\nIf you are unable to run the script, please enter\r\n\r\n```powershell\r\nGet-ExecutionPolicy\r\n```\r\n\r\nOutput:   \r\n\r\n> Restricted\r\n\r\nPlease run PowerShell with administrator rights, and Enter:   \r\n\r\n```powershell\r\nSet-ExecutionPolicy RemoteSigned\r\n```\r\n\r\n\r\n#### Web Installer:\r\n\r\nPowerShell, Enter:    \r\n```powershell\r\n&{$wc=New-Object System.Net.WebClient;$wc.Proxy=[System.Net.WebRequest]::DefaultWebProxy;$wc.Proxy.Credentials=[System.Net.CredentialCache]::DefaultNetworkCredentials;Invoke-Expression ($wc.DownloadString('https://raw.githubusercontent.com/fstudio/clangbuilder/master/bin/Installer/WebInstall.ps1'))}\r\n```\r\n\r\nOr:  \r\n\r\nCmd Enter:   \r\n```cmd\r\n@powershell -NoProfile -ExecutionPolicy unrestricted -Command \"&{$wc=New-Object System.Net.WebClient;$wc.Proxy=[System.Net.WebRequest]::DefaultWebProxy;$wc.Proxy.Credentials=[System.Net.CredentialCache]::DefaultNetworkCredentials;Invoke-Expression ($wc.DownloadString('https://raw.githubusercontent.com/fstudio/clangbuilder/master/bin/Installer/WebInstall.ps1'))}\"\r\n```\r\n\r\n**Your Should Input Your ClangSetup Install Loaction!!!!**\r\n\r\n\r\n## Clang on Windows  \r\n\r\nWhen Build Clang on Windows,Best of Visual Studio version\r\n>VisualStudio 2013 Update 4\r\n\r\nOr Your can use Mingw-w64,your can cross compile LLVM on Linux ,Mingw-w64 Support it.\r\n\r\nThe Other,Your can use cmake to create MinGW Makefile,or NMake Makefile ,run it ,The C and C++ Compiler is Mingw-w64 tools ( i686-w64-mingw32-gcc ,x86_64-w64-mingw32-g++)\r\n\r\n\r\n## Automated build\r\nRun    \r\n```cmd\r\nPowerShell -File .\\bin\\ClangbuilderManager.ps1 -VisualStudio 120 -Arch x64 -Flavor Release -Clear -Static\r\n```\r\n\r\n\r\n\r\n## User Interface\r\nClangbuilderUI        \r\n\r\n![clangbuilderUI](https://raw.githubusercontent.com/fstudio/clangbuilder/master/doc/images/ClangbuilderUI.jpg)\r\n\r\nLauncher       \r\n![launcher](https://raw.githubusercontent.com/fstudio/clangbuilder/master/doc/images/launcher.jpg)\r\n\r\n\r\n## Suggest\r\n1. Best Platform is Windows 10 x64   \r\n2. -Clear flag will reset current process Environment PATH value, Resolve conflict environment variables    \r\n3. Build LLDB require Visual Studio 2015, When you not install Python 3.x ,Clangbuilder will download python.exe after inform you install.   \r\n4. Build LLDB, not test on Windows x86, maybe cannot find PYTHONHOME.\r\n\r\n\r\n\r\n\r\n## Other\r\nFirst Author: Force.Charlie     \r\nCopyright Â© 2016 ForceStudio. All Rights Reserved.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}